<Visyonet>
  <!-- Contains the mapping file for each of the Visualization Objects -->
  <VisMapping id="vis1">
    <node>
      <!-- status of a node as a circle-->
      <attribute name="status">
	<posOffset x="0" y="0" z="0">
	</posOffset>
	 <RubyCode>
	  circle = Circle.new(); #create a circle for a node
	  circle.radius = 0.8 #set the radius of this circle
	  circle.labelText = "status" #create a label known as status for this circle
	  #depending on this value of status set the color
	  if (args[0] == 0) 
	    circle.fillColor = Color.new(255,0,0) #set this color to red
	  end
	  if (args[0] == 1)
	    circle.fillColor = Color.new(0,255,0) #set this color to green
	  end
	  if (args[0] == 2)
	    circle.fillColor = Color.new(20,20,20) #set this color to gray 
	  end
	  circle.position = Position.new(0,0,0)
	  circle #the last line is returned no need of a return statement
	 </RubyCode>
      </attribute>

      <!-- loadIn in the form of a cylinder -->
      <attribute name="loadIn">
	<posOffset x="-0.03" y="0" z="0">
	</posOffset>
	<RubyCode>
	  cylinder = Cylinder.new
	  cylinder.labelText = "loadIn"
	  cylinder.radius = 0.5
	  cylinder.height =  (args[0])/ 90.00 * 2.00
	  cylinder.fillColor = Color.new(124,0,249)
	  cylinder.position = Position.new(-0.25,0,0) #set offsets
	  cylinder
	 </RubyCode>
      </attribute>

      <!-- loadOut of a node in the form of a cylinder -->
      <attribute name="loadOut">
	<posOffset x="0.03" y="0" z="0">
	</posOffset>
	<RubyCode>
	  cylinder = Cylinder.new
	  cylinder.labelText = "loadOut"
	  cylinder.radius = 0.5
	  cylinder.height =  (args[0])/ 90.00 * 2.00
	  cylinder.fillColor = Color.new(255,111,40)
	  cylinder.position = Position.new(0.25,0,0) #set offsets
	  cylinder       
	</RubyCode>
      </attribute>
    </node>

    <link>
      <!-- Rate of a link as an arrow with a thickness -->
      <attribute name="rate">
	<posOffset x="0" y="0" z="0"> #for an link do not set different offsets for x and y
	</posOffset>
	<RubyCode>
	 if(args[1] != nil) 
	    #create an arrow
	    arrow = Arrow2D.new
	    arrow.labelText = "rate"
	    arrow.thickness = args[0]/50 * 10.0 #integer which tells its thickness in terms of a normalized value
	    arrow.color = Color.new(0,0,0)
	    arrow.from = Position.new(0,0,0) #set offsets arrow from
	    arrow.to = Position.new(0,0,0)   #set offsets arrow to
	    arrow
	  else
	    #create a bigger circle
	    circle = Circle.new() #create a circle for a node
	    circle.labelText = "rate" #create a label known as Rate for this circle
	    circle.radius = 3 #set the color and radius of this circle
	    circle.alpha = 30  #set the color balancing
	    circle.fillColor = Color.new(131,131,131)
	    circle.position = Position.new(0,0,0) #set offsets for broadcast links
	    circle
	  end
	 </RubyCode>
      </attribute>
    </link>
  </VisMapping>
</Visyonet>
