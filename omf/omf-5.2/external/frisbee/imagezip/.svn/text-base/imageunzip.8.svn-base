.\"
.\" Copyright (c) 2000-2003 University of Utah and the Flux Group.
.\" All rights reserved.
.\" 
.\" This file is part of Frisbee, which is part of the Netbed/Emulab Network
.\" Testbed.  Frisbee is free software, also known as "open source;" you can
.\" redistribute it and/or modify it under the terms of the GNU General
.\" Public License (GPL), version 2, as published by the Free Software
.\" Foundation (FSF).  To explore alternate licensing terms, contact the
.\" University of Utah at flux-dist@cs.utah.edu or +1-801-585-3271.
.\" 
.\" Frisbee is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GPL for more details.  You
.\" should have received a copy of the GPL along with Frisbee; see the file
.\" COPYING.  If not, write to the FSF, 59 Temple Place #330, Boston, MA
.\" 02111-1307, USA, or look at http://www.fsf.org/copyleft/gpl.html .
.\"
.Dd January 9, 2003
.Dt IMAGEUNZIP 8
.Os
.Sh NAME
.Nm imageunzip
.Nd restore a compressed image created by imagezip
.Sh SYNOPSIS
.Nm
.Op Fl dnovz
.Op Fl D Ar DOS-ptype
.Op Fl p Ar pattern
.Op Fl s Ar slice
.Op Fl W Ar size
.Ar image
.Op outfile
.Sh DESCRIPTION
The
.Nm
utility is used to restore a compressed image of a complete disk or
single DOS partition that was created by
.Xr imagezip .
Unlike
.Xr imagezip ,
.Nm
has no special knowledge of filesystem types.
It merely reads compressed data from the image, decompresses it,
and writes it to the appropriate location in
.Ar outfile .
.Pp
Since
.Xr imagezip
created image files may contain just the location of free blocks and
not their data,
.Nm
must recreate those blocks' data in some way.
The conservative strategy, specified by using the
.Fl z
option, is to write zeros (or a pattern indicated by the
.Fl p
option) to the appropriate location in the output file.
A more efficient strategy is to do nothing for new free blocks,
leaving whatever was at the target location in the output file.
This allows
.Nm
to simply skip over long ranges of free blocks, speeding the restoration
process enormously.
This is the default strategy unless the output file is not seekable.
A potentially security concern with the skip strategy is that data can
.Dq leak
through from the previous use of the
.Ar outfile
to the new use.  If this is an issue, use
.Fl z
to ensure that all blocks in
.Ar outfile
are overwritten.
.Pp
See the
.Xr imagezip
man page for more details on disk images and their creation.
.Pp
To further optimize the image restoration process,
writing of the image to the output file is done is a separate thread
from reading and decompressing.  This allows overlap of decompression and IO.
The
.Fl n
option can be used to disable this feature.
.Pp
Command line arguments are:
.Bl -tag -width "outfile"
.It image
The
.Xr imagezip
created image file.  If
.Ar image
is '-', the image is read from
.Va stdin .
.It outfile
The output file for the expanded image.  If not specified,
.Va stdout
is used.
.Bf Em
Note that if the output file is a device special file, it should always be
the special file for an entire disk even when restoring slice images with the
.Fl s
option.
.Ef
.El
.Pp
Recognized options are:
.Bl -tag -width indent
.It Fl D Ar DOS-ptype
In slice mode, after successful restoration of the image,
change the DOS partition type of the slice indicated by the
.Fl s
option to the numeric value
.Ar DOS-ptype .
This can be used to ensure that the MBR information matches what is in
the slice.  Without this option, the MBR is not touched when restoring
an image to a slice.
.It Fl d
Turn on debugging output.  Can be specified multiple times to increase
the level of debugging output.
.It Fl n
Run decompression and disk writing in a single thread.
This option can be used for benchmarking or if a race condition is suspected.
You will probably never need this option.
.It Fl o
Indicate the progress of image restore by printing a dot ('.') to
.Dv stderr
after every 1MB of compressed data that is decompressed and written to
the output file.
At the end of each line of dots, elapsed time in seconds and
the amount of expanded data written is also printed.
.It Fl p Ar pattern
Specify a 32-bit
.Dq zero pattern
that is to be written to free blocks when using the
.Fl z
option.  The default value is zero.
The number may be in octal, decimal or hex depending on the prefix.
See
.Xr strtoul 3
for details.
.It Fl s Ar slice
Restore
.Ar image
to the indicated slice.
The slice number should be the DOS partition number which ranges from 1 to 4.
The specified
.Ar outfile
must be seekable and have a DOS MBR with a partition table in its first sector.
.It Fl v
Print the version number of
.Nm
and exit.
.It Fl W Ar size
Limits the amount of memory used for write buffering.
When running multi-threaded (i.e., without
.Fl n )
the decompression thread queues decompressed data for the writer thread.
This option limits the amount of queued write data to
.Ar size
Megabytes.
.It Fl z
Tells
.Nm
to write the
.Dq zero pattern
to free blocks in the image rather than seeking over them.
.El
.Sh DIAGNOSTICS
The
.Nm
utility will exit with a status of zero if it successfully decompresses the
entire image and writes it to the output.  It will exit non-zero if it
runs out of memory or gets an error while reading or decompressing the
image or writing the output file.
.Sh IMPLEMENTATION NOTES
Because
.Xr imagezip
does not include the content of free blocks in the image and
because
.Nm
may not initialize these free blocks with any value, you cannot
perform a simple compare of the source and destination of an image
to verify the correctness of the copy.
.Pp
Since slice images do not contain the DOS MBR, you cannot load a slice image
on a naked disk and expect it to boot.
If you need such a bootable slice image, you can use the
.Fl I
option to ignore all but the slice you care about, thus
creating a full disk image containing only that single slice.
.Pp
If the output file is a disk or slice,
it should not overlap with the filesystem you are running on
or disaster will ensue!
.Sh EXAMPLES
.Dl imageunzip /nfs/backup/images/myimage.ndz /dev/ad0
.Pp
Restore a full disk image across NFS to the master IDE disk.
This would have to be done while running in a memory system booted
from a CDROM or the network.
.Pp
.Dl ssh backup cat /images/myimage.ndz | imageunzip - /dev/ad0
.Pp
As above but uses ssh to transfer the image from the remote machine.
.Pp
.Dl ssh backup imagezip -s 1 /dev/ad0 - | imageunzip -z -D 165 -s 1 - /dev/ad0
.Pp
Image slice 1 on the remote machine and restore it to the same slice
on the local disk, zeroing all free blocks and marking the slice as
FreeBSD (165) in the DOS partition table.
.Pp
.Dl imageunzip -z image.ndz | wc
.Pp
A slow way to find out how big an image would be when decompressed
(use
.Xr imagedump
instead).
.Sh SEE ALSO
.Xr imageunzip 8 ,
.Xr imagedump 8 ,
.Xr fdisk 8 ,
.Xr disklabel 8 ,
.Xr zlib 3
.Sh HISTORY
The
.Nm
utility is part of the Netbed software (www.netbed.org).
